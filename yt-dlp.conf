# Ignore errors
-i
# Filename Template
-o "%(uploader)s (%(uploader_id)s)/%(upload_date>%Y-%m-%d)s - %(title)s - (%(duration)ss) [%(resolution)s] [%(id)s].%(ext)s"

# Archive Settings
--download-archive yt-dlp-archive.txt
-a yt-dlp-channels.txt

# Uniform Format
--merge-output-format mkv

# Download subtitles
--sub-langs all
--write-subs

# Download av1 (if it's the best quality) but keep original sort format
-S quality,res,fps,hdr:12,source,vcodec:av01
### Download format with the highest bitrate but allow downloading av1 (doesn't work well)
# In 8k video with av1, av1 is probably the highest bitrate.
# But there exist a problem with 720p and under video,
# where in those vid, av1 doesn't have the highest bitrate, but it probably has the highest visual quality,
# this'll make yt-dlp not download av1 for those video mentioned, but it's still a better behaviour
# compared to original yt-dlp, by default yt-dlp will download vp9 regardless when in some (most?) case avc has
# better quality than vp9 on youtube
#-S quality,res,fps,hdr:12,source,proto,vbr,vcodec:av01,channels,acodec,lang

# Get metadata
--add-metadata
--write-description
--write-thumbnail
--write-info-json
--embed-chapters
#--embed-thumbnail

# Use aria2c for faster downloads with fragmented formats
--downloader "dash,m3u8:aria2c"

# Debug
-v
